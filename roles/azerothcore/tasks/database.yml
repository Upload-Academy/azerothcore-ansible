---
#####################
# Create the proper databases/user needed
#####################

- name: Database related scripts
  template:
    src: "sql/{{ item.file }}"
    dest: "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/backup/"
    owner: "{{ azerothcore_user }}"
    group: "{{ azerothcore_user }}"
    mode: "{{ item.mode }}"
  with_items:
    - { file: "backup.sh", mode: "0755" }
    - { file: "create_databases.sql", mode: "0644" }
    - { file: "drop_databases.sh", mode: "0755" }

# Only run this if there is no previous server aka a new install
- name: Create databases, handle users etc.
  shell: mysql < "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/backup/create_databases.sql"
  when: former_build.stat.exists is defined and former_build.stat.exists == false
  become: true

#####################
# Importing SQL
#####################

- name: Custom SQL files
  template:
    src: "sql/{{ item.file }}"
    dest: "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/{{ azerothcore_source }}/data/sql/custom/{{ item.destination }}/"
    owner: "{{ azerothcore_user }}"
    group: "{{ azerothcore_user }}"
    mode: "{{ item.mode }}"
  with_items:
    - { file: "auth_custom.sql", destination: "db_auth", mode: "0644" }

#####################
# Backup SQL
#####################

- name: Backup databases
  shell: cd "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/backup/" && ./backup.sh
  when: former_build.stat.exists is defined and former_build.stat.exists == true

  ######################
  ## Updating SQL after the backup
  ######################
  #
  #- name: Assemble & Import all
  #  shell: "bash /home/{{ azerothcore_user }}/{{ azerothcore_folder }}/{{ azerothcore_source }}/apps/db_assembler/db_assembler.sh 5"
